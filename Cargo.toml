[package]
name = "mcpiano"
version = "0.1.0"
authors = ["chenyuqide <chenyuqide@outlook.com>"]
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

#[features]
#default = ["console_error_panic_hook"]
#[features]
#default = ["wee_alloc"]
#wee_alloc = "*"

[dependencies]
wasm-bindgen = {version = "*",features = ["serde-serialize"]}
serde = {version = "*", features = ["derive"]}
serde_json = "*"
js-sys = "*"
wasm-bindgen-futures = "*"
wee_alloc = { version = "0.4.5" }


[dependencies.web-sys]
version = "*"
features = [
  'AudioBuffer',
  "AudioBufferSourceNode",
  'AudioContext',
  'AudioDestinationNode',
  'AudioNode',
  'GainNode',
  'AudioParam',
  'CanvasRenderingContext2d',
  'Document',
  'HtmlCanvasElement',
  'Request',
  'RequestInit',
  'RequestMode',
  'Response',
  'Window',
]

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.

#console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
#wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
lto = "true"
